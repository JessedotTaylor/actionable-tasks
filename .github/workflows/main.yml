# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pre:
    name: pre-checks
    runs-on: ubuntu-latest
    steps:
      - name: Log Secrets
        run: echo "${{ secrets.FIREBASE_TOKEN }}"
  # This workflow contains a single job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: NPM ci
        run: npm ci

      - name: Build
        run: npm run build:prod

      - name: Archive production artifact
        uses: actions/upload-artifact@master
        with: 
          name: dist
          path: dist
      # - name: Install firebase tools
      #   run: npm install --save-dev firebase-tools

      # - name: Install angular cli
      #   run: npm install @anglar/cli
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@master
      
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dist
          path: dist
      
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      # - name: ng deploy
      #   run: firebase deploy --token "$FIREBASE_TOKEN"
